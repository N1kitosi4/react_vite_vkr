version: '3.8'

services:
  api_service:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    environment:
      DATABASE_URL: postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db_service/${DATABASE_NAME}
    depends_on:
      db_service:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:85"
    env_file:
      - ./.env.prod
    environment:
      VITE_API_URL: ${VITE_API_URL}
    restart: unless-stopped
    networks:
      - app-network

  db_service:
    image: postgres
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    env_file:
      - ./.env.prod
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 10s
      retries: 5
      timeout: 10s
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-db:
